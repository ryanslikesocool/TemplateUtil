Shader "Custom/#SCRIPTNAME#" {
    Properties {
        _Color ("Color", Color) = (1, 0, 1, 1)
        // _MainTex ("Texture", 2D) = "white" {}
        // _Vector ("Vector", Vector) = (1, 1, 1, 1)
        // _Float ("Float", Float) = 1
        // _Slider ("Slider", Range(0, 1)) = 1
        // [Toggle] _Toggle ("Toggle", Float) = 0 // off

        // _StencilRef ("Stencil Ref", Integer) = 0
        // [Enum(UnityEngine.Rendering.CompareFunction)] _StencilComp ("Stencil Comp", Int) = 4 // less equal ( https://docs.unity3d.com/ScriptReference/Rendering.CompareFunction.html )
        // [Enum(UnityEngine.Rendering.StencilOp)] _StencilPass ("Stencil Pass", Int) = 0 // keep ( https://docs.unity3d.com/ScriptReference/Rendering.StencilOp.html )

        // [Enum(UnityEngine.Rendering.BlendMode)] _BlendSRC ("Blend Source", Int) = 5 // src alpha  ( https://docs.unity3d.com/ScriptReference/Rendering.BlendMode.html )
        // [Enum(UnityEngine.Rendering.BlendMode)] _BlendDST ("Blend Destination", Int) = 10 // one minus src alpha

        // [Enum(UnityEngine.Rendering.BlendOp)] _BlendOp ("Blend Operation", Int) = 0 // add ( https://docs.unity3d.com/ScriptReference/Rendering.BlendOp.html )

        [Enum(UnityEngine.Rendering.CullMode)] _CullMode ("Cull Mode", Int) = 2 // back
    }
    SubShader {
        Tags { // ( https://docs.unity3d.com/Packages/com.unity.render-pipelines.universal@12.0/manual/urp-shaders/urp-shaderlab-pass-tags.html )
            "RenderPipeline" = "UniversalPipeline"
            "UniversalMaterialType" = "SimpleLit"
            "LightMode" = "SRPDefaultUnlit"
			"RenderType" = "Opaque"
			"Queue" = "Geometry"
            "ForceNoShadowCasting" = "True"
            "IgnoreProjector" = "True"
        }

        ZWrite On
        ZTest LEqual
        Cull Back
        Blend Off
        // Blend [_BlendSRC] [_BlendDST]
        // BlendOp [_BlendOp]
        // ColorMask 0

        // Stencil {
        //     Ref [_StencilRef]
        //     Comp [_StencilComp]
        //     Pass [_StencilPass]
        // }

        Pass {
            HLSLPROGRAM
            #pragma target 2.0

            #pragma vertex vert
            #pragma fragment frag

		    #include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl"

            struct Attributes {
                float4 positionOS : POSITION;
                half2 texcoord0 : TEXCOORD0;
            };

            struct Varyings {
                half4 positionCS : SV_POSITION;
                half2 texcoord0 : TEXCOORD0;
            };

            CBUFFER_START(UnityPerMaterial)
                uniform half4 _Color;
            CBUFFER_END

            Varyings vert (Attributes IN) {
                Varyings OUT;
                OUT.positionCS = TransformObjectToHClip(IN.positionOS.xyz);
                OUT.texcoord0 = IN.texcoord0;
                return OUT;
            }

            half4 frag (Varyings IN) : SV_Target {
                return _Color;
            }
            ENDHLSL
        }
    }

    Fallback off
}